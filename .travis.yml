# After changing this file, check it on:
#   http://lint.travis-ci.org/

language: python

# Run jobs on container-based infrastructure, can be overridden per job
sudo: false

# move to env section at the end
#python:
#    - 3.5

#before_install:
    #  - uname -a
    #  - free -m
    #  - df -h
    #  - ulimit -a

install:
  # pull in requirements from install file
  - source devtools/travis-ci/install.sh
  # 
  # Unpack encrypted OpenEye license file
  - echo $TRAVIS_SECURE_ENV_VARS
  - echo $encrypted_e60be1d1adc8_iv
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then openssl aes-256-cbc -K $encrypted_e60be1d1adc8_key -iv $encrypted_e60be1d1adc8_iv -in oe_license.txt.enc -out $OE_LICENSE -d; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == false ]; then echo "OpenEye licese will not be installed in forks."; fi
  # Build out the environment
  - hash -r
  # set to always say yes to conda install
  - conda config --set always_yes yes --set changeps1 no
  # makes installs a little more quiet so you get less output
  - conda update -q conda
  - conda info -a
  # creates environment for the given python version
  - conda create -q -n test python=$TRAVIS_PYTHON_VERSION numpy pytest 
  - source activate test 
  - conda install -c omnia openforcefield=0.0.2
  - conda list
  - pip install -i https://pypi.anaconda.org/openeye/simple openeye-toolkits

before_script:
  - python -V
  - python -c 'import numpy; print(numpy.version.version)'
  - python -c 'from openeye import oechem; print(oechem.OEChemGetVersion())'
  - pip install -e .

script:
  - py.test -v -s --durations=5

notifications:
  email: false

env:
  maxtrix:
    - python=3.5  CONDA_PY=35

  global:
    - OE_LICENSE="$HOME/oe_license.txt"
    - PACKAGENAME="minidrugbank"

    # encrypted BINSTAR_TOKEN for push of dev package to binstar
    - secure: "Iw2yv40ElSbS/TstXS9YnsbJFbxsbFQ25fkWlq8H/O3SPJwpX2/PRoCo99R1Scc0mO9BiVMwGDJQeM9y1VoYo3ozv5SIhPvc+0cMOE3AzkRiFEpZeTtDUTxOWsb+k/x5dH5/AapXRtJeKhY3cWe3lhKdv9N+yWrhY29lawXgfU4WsOEl6ON9BPwwPzvKK1sP4z8kIMzDNjt6gJ3m1HzdEQe/ibrOJIEk6Z4kTLQo9z4F9dm73/L4scEgnW6SOACC39nuYCL8PK4zPNKTqpAoVkm18uyrRz62+qPYSl3RCBNOFtbAuz7fz+ShSMA6g//LpAobNptpQeQpWXkHhYk5ALc6xzH2zScVgrPytKAPwi8mYKq9gYZnUPYgpOdjK3bNyfkGjeV9I4sQwNCBYlKtGHoqZ1l+l6oYsbx+Ti+nIeK67ufGmAugH4GJ3dhZvP6ZR73/irOrvSWiJJgqI1/k4c9Ela4wDpQHDp9sRf03HgSrRTX2gQ3E/JmPx8s56tMdkmrIDIgy6Edc80AN6zEKX0+3YVGcH6ltUViDidRGDlZ7xbUUXYtjqMJXuJEh2SV/wbeVmrBM8Pn+IfsBzLKnd1jqe3pXfoCqbCtvNwW8Sr4qMgWBEHvEtB4C5KvO5CydmRx95q/0ziRGb/VEV6QOnGxT7EIJDfyQeUqNqJD7Bdo="

#after_success:
#- codecov
#


